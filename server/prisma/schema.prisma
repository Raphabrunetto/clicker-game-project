// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  username  String?   // Opcional, para display
  password  String    // Vamos salvar o hash, não a senha pura
  
  // Relacionamento 1-para-1: Cada usuário tem UM estado de jogo
  gameState GameState?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model GameState {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  
  // --- Chave estrangeira para o Usuário ---
  userId    String   @unique @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])

  // --- Dados Genéricos do Jogo ---
  // Usamos BigInt para clickers, pois os números podem ficar gigantescos
  currency  BigInt   @default(0) // A "moeda" principal do jogo (cliques, pontos, etc.)
  
  // Usamos Json para flexibilidade. Podemos salvar os níveis dos upgrades aqui.
  // Ex: { "autoClicker": 2, "clickPower": 5 }
  upgrades  Json     @default("{}")

  lastSavedAt DateTime @updatedAt
}
